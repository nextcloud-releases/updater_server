name: Upgrades

on:
  pull_request:
  push:
    branches:
      - master

concurrency: 
  group: upgrades-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      config: ${{ steps.changes.outputs.config }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # If the config has not changed, we skip
      # It allows us to still have a summary result
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            config:
              - 'config/config.php'
              - '.github/workflows/upgrade.yml'

  configs:
    if: needs.changes.outputs.config == 'true'
    runs-on: ubuntu-latest
    needs: changes

    outputs:
      configs: ${{ steps.build-config.outputs.configs }}

    name: Initializing ${{matrix.channel}} configs
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Getting config
        id: get-config
        run: |
          # Retrieving non-EOL configs from the matrix channel
          CONFIGS=$(php -r "echo(json_encode(include 'config/config.php'));" | jq -c)
          echo "::set-output name=configs::$CONFIGS"

      - name: Parse configs
        uses: nextcloud/updater_server@action
        id: build-config
        with:
          # Edit the following line to install packages required to run your script.
          configs: ${{ steps.get-config.outputs.configs }}

  upgrades:
    runs-on: ubuntu-latest
    needs: configs

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(needs.configs.outputs.configs) }}
        mode: ["updater", "manual"]

    name: Upgrade from ${{ matrix.config.base }} to ${{ matrix.config.latest }} (${{ matrix.config.channel }} - ${{ matrix.mode }})
    steps:
      - name: Set up php ${{ matrix.config.minPHPVersion }}
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2.35.3
        with:
          php-version: ${{ matrix.config.minPHPVersion }}
          extensions: ctype,curl,dom,fileinfo,gd,iconv,intl,json,mbstring,openssl,pdo_sqlite,posix,sqlite,xml,zip
          coverage: none

      - name: Fetch release
        run: |
          BASE="${{ matrix.config.base }}"
          
          # Normalize BASE to full MAJOR.MINOR.PATCH format
          if [[ "$BASE" =~ ^[0-9]+$ ]]; then
            BASE="${BASE}.0.0"
          elif [[ "$BASE" =~ ^[0-9]+\.[0-9]+$ ]]; then
            BASE="${BASE}.0"
          fi

          echo "Normalized base version: $BASE"

          # Try fetching official releases first, then prereleases (rc1–rc5), then fallback to latest-major
          wget --quiet "https://download.nextcloud.com/server/releases/nextcloud-${BASE}.zip" -O nextcloud-base.zip \
            || wget --quiet "https://download.nextcloud.com/server/prereleases/nextcloud-${BASE}.zip" -O nextcloud-base.zip \
            || for rc in {1..5}; do
                wget --quiet "https://download.nextcloud.com/server/prereleases/nextcloud-${BASE}rc${rc}.zip" -O nextcloud-base.zip && break
              done \
            || wget --quiet "https://download.nextcloud.com/server/releases/latest-${BASE%%.*}.zip" -O nextcloud-base.zip

          unzip -q nextcloud-base.zip

      - name: Setup nextcloud
        run: |
          cd nextcloud
          mkdir data
          php occ maintenance:install --verbose --admin-user admin --admin-pass admin

      - name: Fetch upgrade
        if: matrix.mode == 'manual'
        run: |
          mv nextcloud nextcloud.old
          wget --quiet ${{ matrix.config.downloadUrl }} -O nextcloud-update.zip
          unzip -q nextcloud-update.zip

      - name: Copy necessary files
        if: matrix.mode == 'manual'
        run: |
          mv nextcloud.old/config/config.php nextcloud/config/config.php
          mv nextcloud.old/data nextcloud/data

      - name: Perform upgrade
        if: matrix.mode == 'manual'
        run: |
          cd nextcloud
          php occ upgrade -v

      - name: Use updater
        if: matrix.mode == 'updater'
        run: |
          cd nextcloud
          curl --silent --show-error --location https://raw.githubusercontent.com/nextcloud/updater/master/updater.phar > updater/updater.phar
          php updater/updater.phar --url ${{ matrix.config.downloadUrl }} --no-backup --no-interaction -vvv

      - name: Integrity check
        run: |
          cd nextcloud
          php occ integrity:check-core

      - name: Verify final Nextcloud version
        run: |
          cd nextcloud
          VERSION=$(php occ --output=json status | jq -r .version)
          echo "Detected version: $VERSION"
          # Get the prefix from the matrix config and only take the part before the first space
          # This is for enterprise compatibility
          PREFIX="${{ matrix.config.latest }}"
          PREFIX="${PREFIX%% *}"  # remove everything after the first space
          echo "Expected prefix: $PREFIX"
          if [[ "$VERSION" != "$PREFIX"* ]]; then
            echo "❌ Version check failed: $VERSION does not start with $PREFIX"
            exit 1
          fi
          echo "✅ Version check passed"

      - name: Cat logs on failure
        if: failure()
        run: |
          cd nextcloud
          cat data/*.log

  summary:
    runs-on: ubuntu-latest
    needs: [changes, upgrades]

    if: always()

    name: upgrades-summary

    steps:
      - name: Summary status
        run: if ${{ needs.changes.result == 'success' && needs.upgrades.result != 'success' && needs.upgrades.result != 'skipped' }}; then exit 1; fi
